#include <bits/stdc++.h>

using namespace std;

#define LL long long
#define pii pair<int,int>

const int INF = 0x3f3f3f3f;
const LL INFL = 0x3f3f3f3f3f3f3f3fLL;
const int mod = 1e9 + 7;
const int maxn = 2e4 + 3;
const int maxm = 2e5 + 3;
const double eps = 1e-9;

int n, m, e, ck;
int head[maxn];
int u[maxm], v[maxm], nxt[maxm];

void addedge(int uu, int vv){
	u[e] = uu, v[e] = vv;
	nxt[e] = head[uu], head[uu] = e++;
}

int pre[maxn], low[maxn];
bool iscut[maxn], iscutm[maxm];

int dfs(int u, int fa){
	int lowu = pre[u] = ++ck;
	int child = 0;
	for(int i = head[u]; i != -1; i = nxt[i]){
		if(!pre[v[i]]){
			++child;
			int lowv = dfs(v[i], u);
			lowu = min(lowv, lowu);
			if(lowv >= pre[u]) iscut[u] = 1;
			if(lowv > pre[u]) iscutm[i] = 1;
		}
		else if(pre[v[i]] < pre[u] && v[i] != fa){
			lowu = min(lowu, pre[v[i]]);
		}
	}
	if(fa == -1 && child == 1) iscut[u] = 0;
	low[u] = lowu;
	return lowu;
}

int main(){
	while(~scanf("%d%d", &n, &m)){
		memset(head, -1, sizeof(head));
		memset(pre, 0, sizeof(pre));
		memset(iscut, 0, sizeof(iscut));
		memset(iscutm, 0, sizeof(iscutm));
		memset(low, 0, sizeof(low));
		e = ck = 0;
		for(int i = 0; i < m; ++i){
			int uu, vv;
			scanf("%d%d", &uu, &vv);
			addedge(uu, vv);
			addedge(vv, uu);
		}
		for(int i = 1; i <= n; ++i){
			if(!pre[i]) dfs(i, -1);
		}
		int cnt = 0;
		for(int i = 1; i <= n; ++i){
			if(iscut[i]) ++cnt;
		}
		if(cnt == 0) puts("Null");
		else{
			for(int i = 1; cnt; ++i){
				if(!iscut[i]) continue;
				printf("%d%c", i, --cnt ? ' ' : '\n');
			}
		}
		vector<pii> c; c.clear();
		for(int i = 0; i < e; ++i){
			if(iscutm[i]) c.push_back(make_pair(min(u[i], v[i]), max(u[i], v[i])));
		}
		sort(c.begin(), c.end());
		int sz = c.size();
		for(int i = 0; i < sz; ++i){
			printf("%d %d\n", c[i].first, c[i].second);
		}
	}
	return 0;
}
