#include <bits/stdc++.h>

using namespace std;

#define LL long long
#define pii pair<int,int>

const int maxn = 2e5 + 10;

char s[maxn];
int sa[maxn], t[maxn], t2[maxn], c[maxn], n;

void da(int m){
	int *x = t, *y = t2;
	for(int i = 0; i < m; ++i) c[i] = 0;
	for(int i = 0; i < n; ++i) ++c[x[i]=s[i]];
	for(int i = 1; i < m; ++i) c[i] += c[i-1];
	for(int i = n - 1; i >= 0; --i) sa[--c[x[i]]] = i;
	for(int k = 1; k <= n; k <<= 1){
		int p = 0;
		for(int i = n - k; i < n; ++i) y[p++] = i;
		for(int i = 0; i < n; ++i)
			if(sa[i] >= k) y[p++] = sa[i] - k;
		for(int i = 0; i < m; ++i) c[i] = 0;
		for(int i = 0; i < n; ++i) ++c[x[y[i]]];
		for(int i = 1; i < m; ++i) c[i] += c[i-1];
		for(int i = n - 1; i >= 0; --i) sa[--c[x[y[i]]]] = y[i];
		swap(x, y);
		x[sa[0]] = 0, p = 1;
		for(int i = 1; i < n; ++i)
			x[sa[i]] = (y[sa[i]] == y[sa[i-1]] && y[sa[i]+k] == y[sa[i-1]+k]) ? p-1 : p++;
		if(p >= n) break;
		m = p;
	}
}

int rank[maxn], height[maxn];

void getHeight(){
	for(int i = 0; i < n; ++i) rank[sa[i]] = i;
	int k = 0;
	for(int i = 0; i < n; ++i){
		if(k) --k;
		int j = sa[rank[i]-1];
		while(s[j+k] == s[i+k]) k++;
		height[rank[i]] = k;
	}
}

char ss[100010];

int main(){
	while(~scanf("%s", ss)){
		int l = strlen(ss);
		for(int i = 0; i < l; ++i) s[i] = ss[i];
		s[l] = '#';
		scanf("%s", ss);
		int r = strlen(ss);
		for(int i = 0; i < r; ++i) s[i+l+1] = ss[i];
		n = l + r + 1;
		da(256); getHeight();
		int ans = 0;
		for(int i = 1; i < n; ++i){
			if(height[i] > ans){
				if(sa[i] < l && sa[i-1] > l)
					ans = height[i];
				if(sa[i-1] < l && sa[i] > l)
					ans = height[i];
			}
		}
		printf("%d\n", ans);
	}
    return 0;
}

